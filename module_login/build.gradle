plugins {
    alias(libs.plugins.kotlinAndroid)
    alias(libs.plugins.kotlinKapt)
}
if (isLoginModule.toBoolean()) {
    apply plugin: "com.android.application"
    apply plugin: "therouter"
} else {
    apply plugin: "com.android.library"
}
apply plugin: "com.google.devtools.ksp"
android {
    namespace = "com.ebook.login"
    compileSdk = 35
    defaultConfig {
        //如果是独立模块，则使用当前组件的包名
        if (isLoginModule.toBoolean()) {
            applicationId = "com.ebook.login"
        }
        minSdk = 26
        targetSdk = 35
        testInstrumentationRunner = "androidx.test.runner.AndroidJUnitRunner"
    }
    sourceSets {
        named("main") {
            if (isLoginModule.toBoolean()) {
                manifest.srcFile "src/main/module/AndroidManifest.xml"
            } else {
                manifest.srcFile "src/main/AndroidManifest.xml"
                java {
                    exclude "debug/**"
                }
            }
        }
    }
    buildTypes {
        debug {
            minifyEnabled = false
            proguardFiles(
                    getDefaultProguardFile("proguard-android-optimize.txt"),
                    "proguard-rules.pro"
            )
        }
        release {
            minifyEnabled = false
            proguardFiles(
                    getDefaultProguardFile("proguard-android-optimize.txt"),
                    "proguard-rules.pro"
            )
        }
    }
    buildFeatures {
        dataBinding = true
        viewBinding = true
    }
    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = "17"
    }
}
dependencies {
    api(project(":lib_book_common"))
    implementation(libs.core.ktx)
    implementation(libs.androidx.lifecycle.viewmodel.ktx)
    ksp(libs.apt)
    implementation(libs.router)
    //Dagger
    ksp(libs.dagger.compiler)

    testImplementation(libs.junit)
    androidTestImplementation(libs.ext.junit)
    androidTestImplementation(libs.espresso.core)
}
